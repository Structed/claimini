@using System
@using System.Collections.Generic
@using System.Threading.Tasks
@using Claimini.Shared
@using Claimini.Shared.Extensions
@using Microsoft.AspNetCore.Blazor.Components
@inherits Claimini.BlazorClient.Components.BaseComponent

@if (SelectedCustomer != null)
{
    <CustomerComponent Customer=SelectedCustomer />
}
else
{
    <SelectCustomerComponent AvailableCustomers=AvailableCustomers OnCustomerSelected=OnSelectCustomer />
}

@if (AvailableArticles != null)
{
    <h2>Select Articles:</h2>
    <table class="table table-hover">
        <thead>
            <tr>
                <th></th>
                <th>Id</th>
                <th>Name</th>
                <th>Price</th>
                <th>Created At</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in AvailableArticles)
            {
                <tr>
                    <td><button type="button" class="btn btn-info oi oi-plus"></button></td>
                    <td>@article.Id</td>
                    <td>@article.Name</td>
                    <td>@article.Price</td>
                    <td>@article.CreatedTimestamp.UnixTimeStampToDateTime().ToLocalTime()</td>
                </tr>
            }
        </tbody>
    </table>
}

<button type="submit" class="btn btn-success" onclick="@Submit">Save</button>

@functions
{
    [Parameter]
    private InvoiceDto invoice { get; set; } = new InvoiceDto();

    [Parameter]
    private Func<InvoiceDto, Task> OnSubmit { get; set; }

    [Parameter]
    private Customer SelectedCustomer { get; set; }

    [Parameter]
    private List<Customer> AvailableCustomers { get; set; }

    [Parameter]
    private List<Article> AvailableArticles { get; set; }

    private void Submit()
    {
        //Console.WriteLine(invoice.Name + invoice.StreetAddress);
        Task result = this.OnSubmit?.Invoke(invoice);
    }

    private void OnSelectCustomer(Customer customer)
    {
        if (customer == null)
        {
            return;
        }

        this.SelectedCustomer = customer;
        StateHasChanged();
    }
}
