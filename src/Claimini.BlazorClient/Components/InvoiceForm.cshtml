@using System
@using System.Collections.Generic
@using System.Runtime.CompilerServices
@using System.Threading.Tasks
@using Claimini.Shared
@using Claimini.Shared.Extensions
@using Microsoft.AspNetCore.Blazor.Components
@inherits Claimini.BlazorClient.Components.BaseComponent

@if (SelectedCustomer != null)
{
    @*<CustomerComponent Customer=SelectedCustomer />*@
    <p>
        Customer: @SelectedCustomer.Name
    </p>
}
else
{
    <SelectCustomerComponent AvailableCustomers=AvailableCustomers OnCustomerSelected=OnSelectCustomer />
}

@if (AvailableArticles != null)
{
    <ArticleSelectComponent AvailableArticles="AvailableArticles" OnSelect="@((Article article) => OnSelectArticle(article, true))" />
    <ArticleSelectComponent AvailableArticles="SelectedArticles" OnSelect="@((Article article) => OnSelectArticle(article, false))" />
}

<button type="submit" class="btn btn-success" onclick="@Submit">Save</button>

@functions
{
    [Parameter]
    private InvoiceDto invoice { get; set; } = new InvoiceDto();

    [Parameter]
    private Func<InvoiceDto, Task> OnSubmit { get; set; }

    [Parameter]
    private Customer SelectedCustomer { get; set; }

    [Parameter]
    private List<Customer> AvailableCustomers { get; set; }

    [Parameter]
    private List<Article> AvailableArticles { get; set; }


    private List<Article> SelectedArticles { get; set; } = new List<Article>();


    private void Submit()
    {
        //Console.WriteLine(invoice.Name + invoice.StreetAddress);
        Task result = this.OnSubmit?.Invoke(invoice);
    }

    private void OnSelectCustomer(Customer customer)
    {
        if (customer == null)
        {
            return;
        }

        this.SelectedCustomer = customer;
        StateHasChanged();
    }

    private void OnSelectArticle(Article article, bool addToInvoice)
    {
        if (article == null)
        {
            Console.WriteLine("Article was null");
            return;
        }

        Console.WriteLine($"Select Click handler for {article.Id}:{article.Name} in {this.GetType()}");

        if (addToInvoice)
        {
            this.SelectedArticles.Add(article);
            this.AvailableArticles.Remove(article);
        }
        else
        {
            this.AvailableArticles.Add(article);
            this.AvailableArticles.Sort((a, b) => a.Id.CompareTo(b.Id));
            this.SelectedArticles.Remove(article);
        }

        StateHasChanged();
    }
}
